[이클립스]

{git연동시 주의사항}
깃허브 레파지토리의 이름은 프로젝트의 이름과 같게 해야 한다
(다를게 할 경우 오류가 나서 실행이 안될 수 있다)

.gitignore 에 .settings(컴퓨터 환경 별 설정값) , bin(프로젝트의 컴퓨터 언어) , .classpath , .project
같은 내용을 넣어놔야 한다 (관리되어선 안 됨)

git으로 관리할때 git init은 각 프로젝트 폴더에서 해야한다 (workspace에서 하면 안됨)

작업장소가 다를시에 꼭 pull을 받아서 처리한다



[메소드] - 기능을 가지고 있다, 다른 언어에서의 함수와 비슷한 역할을 한다
	'서드'라고 드물게 부르기도 한다

public static void main(String[] arg) { } - 메인 메소드 (프로그램구동의 시작점)

System.out.println(); - 출력 메소드 (자동 줄바꿈)
Ex) System.out.println("안녕하세요"); 
    System.out.println("반갑습니다"); -> 안녕하세요
				 반갑습니다

System.out.println(); 에서 println 부분에 ln이 없을 경우 자동줄바꿈이 되지 않는다

Ex)System.out.print("안녕");
   System.out.print("하세요"); -> 안녕하세요


[단축키]

ctrl + N - 새 프로젝트 만들기

ctrl + (+) or (-) - 글씨크기 조절
(backspace 위의 키 가능)

(파일클릭하고) F2 - 파일명변경

ctrl + space - 자동 완성
자동완성의 예 ) public static void main(String[] args) {} = main 치고 ctrl + space
	        System.out.println(); = syso 치고 ctrl + space

ctrl + F11 - 프로그램 작동

ctrl + alt + 방향키 - 줄 복사 (커서 기준)

alt + 방향키 - 줄 이동

ctrl + z - (작업한 내용)뒤로 가기

ctrl + y - (ctrl + z로 뒤로 돌린 내용)되돌리기

ctrl + c - 복사

ctrl + v - 붙여넣기

ctrl + / - (커서 기준)줄 주석
* 주석 = 코드에 영향을 끼치지 않는 내용으로서 코드에 대한 메모를 남기는데 사용된다.
 
ctrl + shift + / - (드래그 기준) 문단 주석

[이스케이프 문자] - 문자열에서 사용하는것으로 특정 기능을 사용할수있게 해준다
주로 문자앞에 \ 을 붙인다

\n - 줄바꿈

\t - tab기능

\r - 다음줄의 첫번째로 이동

\b - 바로앞의 문자한개 삭제

\" - " 표현
\' - ' 표현
\\ - \ 표현

[문자열] - 문자열은 " "안에 쓰이는 모든 문자이다.

문자열 + 숫자를 할 경우 문자열의 덧셈으로 바뀐다
Ex) System.out.println("2"+3); 을 출력할 시 5가 아닌 23 (2+3) 으로 출력된다. 
    System.out.println("안녕" + 2 + 3); 출력 결과 -> 안녕23
    --> 문자열 출력과 숫자 연산을 함께 하고 싶을 시 소괄호() 활용
        Ex) System.out.println("안녕"+ (2 + 3)); 출력 결과 -> 안녕5

[자료형(type)]
이름	크기	     범위

(정수형)
byte  	1byte	-128 ~ 127
short  	2byte	-32768 ~ 32767
int	4byte	-2,147,483,648 ~ 2,147,483,647 

(실수형)
float	4byte	±3.4 * 10^-37 ~ ±3.4 * 10^-38
double	8byte	±1.7 * 10^-307 ~ ±1.7 * 10^-308

(문자형)
char 	1byte	-128 ~ 127

(기타)
void	값을 갖지 않는 특수한 데이터 형


char -  문자 한개를 표현할 때 사용
문자 한 개는 '' 작은 따옴표로 표현해야한다

[변수]  -  특정 값을 저장하는 메모리 공간을 뜻한다
	해당 메모리 공간에 저장되는 값은 
	정수형(integer(int)), 실수형(float, double), 문자(char) 및 문자열(String) 등 여러가지 형식이 있다
	해당 메모리 공간에는 허용되는 범위 내에 어떤값이든 저장할수 있으므로 변수라고 하며, 
	허용되는 범위보다 큰 값을 저장하려고 할 때 오버플로우가 발생한다.

[아스키코드(ASCII)] - 문자를 숫자로 표현한 방법 반대로 숫자를 문자로 표현할수도 있다.
참조 - https://namu.wiki/w/%EC%95%84%EC%8A%A4%ED%82%A4%20%EC%BD%94%EB%93%9C

[캐스팅] - 자료형을 형변환 시키는 것
Ex) 	char ch = 'A'
	System.out.println((int)ch); -> 65
실수형에서 정수형으로 캐스팅할 시 정수자리를 제외한 나머지는 모두 버린다

[문자열(String)] - 한개의 문자가 아닌 문장, 혹은 여러개의 문자형을 모아둔 자료형