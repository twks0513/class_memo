[set]
순서를 유지하지않고 중복된 값을 허용하지 않는 리스트
HashSet (set변수명) = new HashSet();
으로 선언한다
인덱스에 대한 개념이 없어 get메소드로 가져올수없다
따라서 한개씩 반환하려면 반복자(Iterator)를 이용해야한다

Iterator (반복자변수명) = (리스트변수명).iterator();
의 형태로 선언한다

Iterator로 만들면 [bof(시작점),(요소),(요소),eof(끝나는점)]로 생성된다

.을 찍어서 나온 메소드들은 Object라는 반환타입으로 이루어져 있어서 
캐스팅(형변환)을 해주거나 Object로 출력해주어야한다 

(set변수명).remove((요소)) - 요소를 삭제한다

(반복자변수명).hasNext() - 요소가 있는지 반환해준다
(반복자변수명).next() - 요소를 출력해준다 요소가 없을 경우 에러가 발생한다

[map]
키와 값이 한쌍으로 이루어져 있다
순서가 유지되지 않으며 키의 중복은 허용되지 않는다

HashMap (map변수명) = new HashMap();
으로 선언한다

(map변수명).put((키값),(밸류값));  - 키에 밸류를 넣는다

(map변수명).get((키값)); - 키값에 있는 밸류를 반환한다

(map변수명).containsKey((키값)); - 해당하는 키가 있는지 반환해준다

(map변수명).remove((키값)); - 해당하는 키를 삭제한다

(map변수명).keySet(); - 키값만 반환해준다 (set자료형으로 반환해준다)
보통 Iterator (반복자변수명) = (map변수명).keySet().iterator(); 으로 많이 선언한다

객체지향 - 다루기는 편하지만 무겁다 /java
절차지향 - 기능위주로 되어있어 다루기는 어렵지만 가볍다 /C언어

[class] 
반복적으로 사용하는 것으로 하나의 틀이라고 볼수있다
변수를 클래스형태로 만들면 객체(참조형 변수)가 된다

라이브러리 - 자바프로그램에서 사용하는 기능과 같은 말이다


접근제한자
public - 클래스 내부,외부에서 접근이 가능
private - 클래스 내부에서만 접근 가능
protected - 상속받은 자식 또는 내부에서 접근이 가능
default - 같은 패키지 안에서 접근 가능

[메소드]
다른 언어에서의 함수와 같은 뜻으로
기능을 구현하기 위해 사용된다

(접근제한자) (반환타입) (메소드명) ((매개변수 argument)) 의 구조를 가지고 있다

메소드를 다른 곳에서 사용하려면 메소드가 있는 클래스를 내가 사용할 클래스에 객체로 만들고
(객체의변수).(메소드명)() 의 형태로 작성하면된다 