[다중 반복문] - 반복문의 종속문장에는 반복문이 올수있다
	for(int i=1; i<=5; i++){
		System.out.println("===for시작");
		for(int j=1; j<=5; j++){
			System.out.println(i+":"+j);
		}
		System.out.println("for끝===");
	}

같은 다중 반복문을 작성했을때 나오는결과는 
===for시작
1:1
1:2
1:3
1:4
1:5
for끝===
===for시작
2:1
2:2
2:3
2:4
2:5
for끝===
===for시작
3:1
3:2
3:3 .....

이런식으로 나온다 첫번째 i의 반복문이 한번 진행후 j의 반복문이 끝날때까지 작동하면 다시 i의 반복문으로 돌아간다

[디버깅] - 내가 짠 프로그램이 정확하게 잘동작하는지 어떤식으로 동작하는지 한줄씩 확인할수있는 기능으로
	F11로 실행한다. F5, F6으로 한줄씩 실행할수있다 
	ctrl + F2 로 종료할수있다

[배열]   -  같은 자료형으로 연속된 공간을 만드는 것이다 배열에 접근할때에는 index를 사용하여 접근한다
	index(첨자)는 0부터 시작한다. 자료형[] 배열명 또는 자료형 배열명[] 으로 생성한다
	반복문으로 배열에 데이터를 넣을 때 배열의 크기를 안다면 크기를 넣어주면 되지만
	그 크기를 모른다면 (배열변수명).length 로 넣어도 된다
ex)   String[]names = new String[3];
	    Scanner input = new Scanner(System.in);
	     for (int i=0; i<names.length;i++) {
		System.out.println(i+"이름 입력");
		names[i]= input.next();
	      }
	
[배열의 초기화] - 배열을 초기화할땐 (자료형)[] (변수명) = new(자료형)[] {} 으로 한다
	          여기서 new (자료형)[] 은 생략이 가능하다.
	          뒷부분 []안에는 {}안에 자료를 넣지않았다면 배열의 크기를 지정해서 넣어주어야한다

[for each문] - 향상된 for문이라고도 하며 for((자료형)(변수명) : (배열변수명)) 의 형태이다
		